Refactoring List 
A list of all of the things that I want to fix. (Actively Added to. Cleaned every Monday). 

TODO: 

0. Run tests for the Special Actions X
1. Fix large if then else into a case statement. X
2. Move case into an abstract factory <-- Removed with polymorphism 
3. Refactor with meaning. X
4. Add human behavoir. Generalizing behavoir in player. <-- Fixed with polymorphism     
5. Factor out the check for get color in the Robot class.  <-- Fixed by match function in Card
6. Possibly create a map for the Card class that implements an enum that knows what to do with a match. IE Color can do ___ and Wild can be placed __ and special can ___ <-- Fixed by match function in card and children
7. Each card should know its match and therefore can be moved into a single place. Possibly a check(c) function that allows the card to see what it is and what to do with it. The Deck could still implement the check but the card would be doing the validation. X
8. Should check to see if the card is being removed from the hand. If not implement a Remove(Card c) function at the player level. <-- Match function in player handlesit 
9. Fix the way draw two works
10. Fix the way skip works when players is equal to two.
11. Deck needs a quick check function to see if a move is possible... X
12. WildFour needs to have the proper player draw four...
13. Find a way to have addDiscard return a boolean if possible. and a new position. <-- Fixed with a match funtion in Human. Move up tree into Player
14. Deck.java uses unsafe operations. Find these and fix them. 
15. Fix the call for wild in player. This is skipped for some reason. 
16. Only allow one draw per turn in player. X