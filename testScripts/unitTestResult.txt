Buildfile: /home/mike/langsToLearn/java/projects/UnoClone/build.xml

-pre-init:

-init-private:

-init-user:

-init-project:

-init-macrodef-property:

-do-init:

-post-init:

-init-check:

-init-ap-cmdline-properties:

-init-macrodef-javac-with-processors:

-init-macrodef-javac-without-processors:

-init-macrodef-javac:

-init-macrodef-test-impl:

-init-macrodef-junit-init:

-init-macrodef-junit-single:

-init-test-properties:

-init-macrodef-junit-batch:

-init-macrodef-junit:

-init-macrodef-junit-impl:
Trying to override old definition of task http://www.netbeans.org/ns/j2se-project/3:test-impl

-init-macrodef-testng:

-init-macrodef-testng-impl:

-init-macrodef-test:

-init-macrodef-junit-debug:

-init-macrodef-junit-debug-batch:

-init-macrodef-junit-debug-impl:

-init-macrodef-test-debug-junit:

-init-macrodef-testng-debug:

-init-macrodef-testng-debug-impl:

-init-macrodef-test-debug-testng:

-init-macrodef-test-debug:

-init-debug-args:

-init-macrodef-nbjpda:

-init-macrodef-debug:

-init-macrodef-java:

-init-presetdef-jar:

-init-ap-cmdline-supported:

-init-ap-cmdline:

init:

-deps-jar-init:
   [delete] Deleting: /home/mike/langsToLearn/java/projects/UnoClone/build/built-jar.properties

deps-jar:

-warn-already-built-jar:
[propertyfile] Updating property file: /home/mike/langsToLearn/java/projects/UnoClone/build/built-jar.properties

-check-automatic-build:

-clean-after-automatic-build:

-pre-init:

-init-private:

-init-user:

-init-project:

-init-macrodef-property:

-do-init:

-post-init:

-init-check:

-init-ap-cmdline-properties:

-init-macrodef-javac-with-processors:

-init-macrodef-javac-without-processors:

-init-macrodef-javac:

-init-macrodef-test-impl:
Trying to override old definition of task http://www.netbeans.org/ns/j2se-project/3:test-impl

-init-macrodef-junit-init:

-init-macrodef-junit-single:

-init-test-properties:

-init-macrodef-junit-batch:

-init-macrodef-junit:

-init-macrodef-junit-impl:
Trying to override old definition of task http://www.netbeans.org/ns/j2se-project/3:test-impl

-init-macrodef-testng:

-init-macrodef-testng-impl:

-init-macrodef-test:

-init-macrodef-junit-debug:

-init-macrodef-junit-debug-batch:

-init-macrodef-junit-debug-impl:

-init-macrodef-test-debug-junit:

-init-macrodef-testng-debug:

-init-macrodef-testng-debug-impl:

-init-macrodef-test-debug-testng:

-init-macrodef-test-debug:

-init-debug-args:

-init-macrodef-nbjpda:

-init-macrodef-debug:

-init-macrodef-java:

-init-presetdef-jar:

-init-ap-cmdline-supported:

-init-ap-cmdline:

init:

-deps-clean-init:

deps-clean:

-warn-already-built-clean:
[propertyfile] Updating property file: /home/mike/langsToLearn/java/projects/UnoClone/build/built-clean.properties

-do-clean:
   [delete] Deleting directory /home/mike/langsToLearn/java/projects/UnoClone/build

-post-clean:

clean:

-verify-automatic-build:

-pre-pre-compile:
    [mkdir] Created dir: /home/mike/langsToLearn/java/projects/UnoClone/build/classes

-pre-compile:

-copy-persistence-xml:

-compile-depend:

-do-compile:
    [mkdir] Created dir: /home/mike/langsToLearn/java/projects/UnoClone/build/empty
    [mkdir] Created dir: /home/mike/langsToLearn/java/projects/UnoClone/build/generated-sources/ap-source-output
    [javac] Compiling 11 source files to /home/mike/langsToLearn/java/projects/UnoClone/build/classes
    [javac] Note: /home/mike/langsToLearn/java/projects/UnoClone/src/practiceUno/Deck.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
     [copy] Copying 1 file to /home/mike/langsToLearn/java/projects/UnoClone/build/classes

-post-compile:

compile:

-pre-pre-compile-test:
    [mkdir] Created dir: /home/mike/langsToLearn/java/projects/UnoClone/build/test/classes

-pre-compile-test:

-compile-test-depend:

-do-compile-test:
    [javac] Compiling 8 source files to /home/mike/langsToLearn/java/projects/UnoClone/build/test/classes
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:82: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         instance.AddDiscard(c, p, new Scanner(System.in), p.get(0).GetPlayerPos());
    [javac]                 ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:101: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]                 d.AddDiscard(n, null, new Scanner(System.in), 0);
    [javac]                  ^
    [javac]   required: Card
    [javac]   found: NumberCard,<null>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:123: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]             d.AddDiscard(n, null, new Scanner(System.in), 0);
    [javac]              ^
    [javac]   required: Card
    [javac]   found: NumberCard,<null>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:144: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]             d.AddDiscard(n, null, new Scanner(System.in), 0);
    [javac]              ^
    [javac]   required: Card
    [javac]   found: NumberCard,<null>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:168: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]            d.AddDiscard(discard, p, new Scanner(System.in), 0);
    [javac]             ^
    [javac]   required: Card
    [javac]   found: SpecialCard,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:196: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]             d.AddDiscard(sp, p, new Scanner(System.in), 0);
    [javac]              ^
    [javac]   required: Card
    [javac]   found: SpecialCard,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:221: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]                 d.AddDiscard(s, p, new Scanner(System.in), 0);
    [javac]                  ^
    [javac]   required: Card
    [javac]   found: SpecialCard,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:246: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         d.AddDiscard(w, p, new Scanner(System.in), 0);
    [javac]          ^
    [javac]   required: Card
    [javac]   found: WildCard,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:269: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         canPlace = d.AddDiscard(w, p, new Scanner(System.in), 0);
    [javac]                     ^
    [javac]   required: Card
    [javac]   found: WildCard,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:293: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]             d.AddDiscard(discard, p, new Scanner(System.in), 0);
    [javac]              ^
    [javac]   required: Card
    [javac]   found: WildCard,ArrayList<Player>,Scanner,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:365: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         d.AddDiscard(first.Discard(0), p, null, p.get(0).GetPlayerPos());
    [javac]          ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,<null>,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:399: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         newPos = d.AddDiscard(first.Discard(0), p, null, p.get(0).GetPlayerPos());
    [javac]                   ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,<null>,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:421: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         newPos = d.AddDiscard(third.Discard(0), p, null, p.get(2).GetPlayerPos());
    [javac]                   ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,<null>,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:444: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         newPos = d.AddDiscard(first.Discard(0), p, null, p.get(0).GetPlayerPos());
    [javac]                   ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,<null>,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/DeckTest.java:465: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]         newPos = d.AddDiscard(third.Discard(0), p, null, p.get(2).GetPlayerPos());
    [javac]                   ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,<null>,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/HumanTest.java:71: error: no suitable method found for PlayAHand(Deck,<null>)
    [javac]         h.PlayAHand(d, null);
    [javac]          ^
    [javac]     method Human.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/RobotTest.java:70: error: no suitable method found for PlayAHand(Deck,ArrayList<Player>)
    [javac]         r.PlayAHand(d, p );
    [javac]          ^
    [javac]     method Robot.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/RobotTest.java:90: error: no suitable method found for PlayAHand(Deck,ArrayList<Player>)
    [javac]         r.PlayAHand(d, p);
    [javac]          ^
    [javac]     method Robot.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/RobotTest.java:121: error: no suitable method found for PlayAHand(Deck,ArrayList<Player>)
    [javac]             r.PlayAHand(d, p);
    [javac]              ^
    [javac]     method Robot.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/RobotTest.java:154: error: no suitable method found for PlayAHand(Deck,ArrayList<Player>)
    [javac]         r.PlayAHand(d, p);
    [javac]          ^
    [javac]     method Robot.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/RobotTest.java:172: error: no suitable method found for PlayAHand(Deck,ArrayList<Player>)
    [javac]         r.PlayAHand(d, p);
    [javac]          ^
    [javac]     method Robot.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/RobotTest.java:190: error: no suitable method found for PlayAHand(Deck,ArrayList<Player>)
    [javac]         r.PlayAHand(d, p);
    [javac]          ^
    [javac]     method Robot.PlayAHand(Card,Deck) is not applicable
    [javac]       (actual argument Deck cannot be converted to Card by method invocation conversion)
    [javac] /home/mike/langsToLearn/java/projects/UnoClone/test/practiceUno/SpecialCardTest.java:239: error: method AddDiscard in class Deck cannot be applied to given types;
    [javac]            pos =  d.AddDiscard(c, p, null, pos);
    [javac]                    ^
    [javac]   required: Card
    [javac]   found: Card,ArrayList<Player>,<null>,int
    [javac]   reason: actual and formal argument lists differ in length
    [javac] 23 errors
